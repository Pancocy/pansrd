const t='{"documentCount":27,"nextId":27,"documentIds":{"0":"/datastru/ds-array.html#数组","1":"/datastru/ds-array.html#数组的常见操作","2":"/datastru/ds-array.html#_1-初始化数组","3":"/datastru/ds-array.html#_2-访问数组元素","4":"/datastru/ds-array.html#_3-插入元素","5":"/datastru/ds-array.html#_4-删除元素","6":"/datastru/ds-array.html#_5-遍历数组","7":"/datastru/ds-array.html#_6-查找元素","8":"/datastru/ds-array.html#_7-扩容数组","9":"/datastru/ds-array.html#数组的优、缺点和应用","10":"/datastru/ds-array.html#优点","11":"/datastru/ds-array.html#缺点","12":"/datastru/ds-array.html#应用","13":"/datastru/ds-complexity.html#时间复杂度","14":"/datastru/ds-complexity.html#_1-时间增长趋势","15":"/datastru/ds-complexity.html#_2-判断渐进上界","16":"/datastru/ds-complexity.html#_3-常见时间复杂度类型","17":"/datastru/ds-datastructure.html#数据结构初识","18":"/datastru/ds-datastructure.html#常见的数据结构类型","19":"/datastru/ds-datastructure.html#逻辑结构-线性和非线性","20":"/datastru/ds-datastructure.html#物理结构-连续和非连续","21":"/datastru/ds-datastructure.html#小结","22":"/rust/var-loop-func/rust-closure.html#闭包","23":"/rust/var-loop-func/rust-generic.html#泛型","24":"/rust/var-loop-func/rust-iterator.html#迭代器","25":"/rust/var-loop-func/rust-lifetime.html#生命周期","26":"/rust/var-loop-func/rust-ownership.html#所有权"},"fieldIds":{"title":0,"titles":1,"text":2},"fieldLength":{"0":[1,1,9],"1":[1,1,1],"2":[2,1,42],"3":[2,1,26],"4":[2,1,30],"5":[2,1,20],"6":[2,1,17],"7":[2,1,28],"8":[2,1,24],"9":[2,1,1],"10":[1,2,17],"11":[1,2,17],"12":[1,2,37],"13":[1,1,9],"14":[2,1,55],"15":[2,1,29],"16":[2,1,103],"17":[1,1,4],"18":[1,1,12],"19":[2,2,22],"20":[2,2,27],"21":[1,1,7],"22":[1,1,1],"23":[1,1,1],"24":[1,1,1],"25":[1,1,1],"26":[1,1,1]},"averageFieldLength":[1.4814814814814814,1.1851851851851851,20.074074074074073],"storedFields":{"0":{"title":"数组","titles":[]},"1":{"title":"数组的常见操作","titles":[]},"2":{"title":"1. 初始化数组","titles":["数组的常见操作"]},"3":{"title":"2. 访问数组元素","titles":["数组的常见操作"]},"4":{"title":"3.  插入元素","titles":["数组的常见操作"]},"5":{"title":"4. 删除元素","titles":["数组的常见操作"]},"6":{"title":"5.遍历数组","titles":["数组的常见操作"]},"7":{"title":"6. 查找元素","titles":["数组的常见操作"]},"8":{"title":"7. 扩容数组","titles":["数组的常见操作"]},"9":{"title":"数组的优、缺点和应用","titles":[]},"10":{"title":"优点","titles":["数组的优、缺点和应用"]},"11":{"title":"缺点","titles":["数组的优、缺点和应用"]},"12":{"title":"应用","titles":["数组的优、缺点和应用"]},"13":{"title":"时间复杂度","titles":[]},"14":{"title":"1.时间增长趋势","titles":["时间复杂度"]},"15":{"title":"2.判断渐进上界","titles":["时间复杂度"]},"16":{"title":"3.常见时间复杂度类型","titles":["时间复杂度"]},"17":{"title":"数据结构初识","titles":[]},"18":{"title":"常见的数据结构类型","titles":["数据结构初识"]},"19":{"title":"逻辑结构：线性和非线性","titles":["数据结构初识","常见的数据结构类型"]},"20":{"title":"物理结构：连续和非连续","titles":["数据结构初识","常见的数据结构类型"]},"21":{"title":"小结","titles":["数据结构初识"]},"22":{"title":"闭包","titles":[]},"23":{"title":"泛型","titles":[]},"24":{"title":"迭代器","titles":[]},"25":{"title":"生命周期","titles":[]},"26":{"title":"所有权","titles":[]}},"dirtCount":0,"index":[["生命周期",{"0":{"25":1}}],["生物学的",{"2":{"16":1}}],["迭代器",{"0":{"24":1}}],["泛型",{"0":{"23":1}}],["闭包",{"0":{"22":1}}],["要想真正地理解数据",{"2":{"21":1}}],["要考虑末端元素将失效",{"2":{"4":1}}],["小结",{"0":{"21":1}}],["基于链表可实现",{"2":{"20":1}}],["基于数组可实现",{"2":{"20":1}}],["等",{"2":{"20":1}}],["维度",{"2":{"20":1}}],["张量",{"2":{"20":1}}],["张量之间的线性代数运算",{"2":{"12":1}}],["所有权",{"0":{"26":1}}],["所有的数据结构都可以基于数组或者链表",{"2":{"20":1}}],["所以对时间复杂度不产生影响",{"2":{"14":1}}],["而链表则是分散的",{"2":{"20":1}}],["连续和非连续",{"0":{"20":1}}],["物理结构是指数据在内存中的存储方式是连续的还是非连续的",{"2":{"20":1}}],["物理结构",{"0":{"20":1}}],["hello",{"2":{"19":1,"20":1}}],["非网状结构",{"2":{"19":1}}],["非线性数据结构又可以分为",{"2":{"19":1}}],["非线性数据结构",{"2":{"19":1}}],["网状结构",{"2":{"19":1}}],["网状结构和非网状结构",{"2":{"19":1}}],["具有线性关系还是非线性关系",{"2":{"19":1}}],["逻辑结构主要是描述数据之间的逻辑关系",{"2":{"19":1}}],["逻辑结构",{"0":{"19":1}}],["逻辑结构和物理结构",{"2":{"18":1}}],["​理解数据机构可以从两个层面理解",{"2":{"18":1}}],["树",{"2":{"18":1,"19":2,"20":2}}],["栈",{"2":{"18":1,"19":1,"20":2}}],["链表",{"2":{"18":1,"19":1}}],["🌵常见的数据类型有",{"2":{"18":1}}],["🎉一些推算操作数的技巧",{"2":{"14":1}}],["存储链表的指针和数据通常是分开的",{"2":{"20":1}}],["存储结构并且封装相应操作方法的数据集合",{"2":{"17":1}}],["存储的数据类型相同",{"2":{"0":1}}],["定义",{"2":{"17":1}}],["个",{"2":{"16":1}}],["个分裂出",{"2":{"16":1}}],["从",{"2":{"16":1}}],["从而借助高速缓存来提升后续操作的执行速度",{"2":{"10":1}}],["递归实现",{"2":{"16":1}}],["∗1",{"2":{"16":1}}],["∗",{"2":{"16":2}}],["方案数量为",{"2":{"16":1}}],["方法",{"2":{"2":1}}],["求其所有可能的排列方案",{"2":{"16":1}}],["给定",{"2":{"16":1}}],["问题",{"2":{"16":1}}],["全排列",{"2":{"16":1}}],["阶乘阶",{"2":{"16":1}}],["阶乘阶对应数学上的",{"2":{"16":1}}],["阶乘",{"2":{"16":1}}],["8",{"2":{"16":2}}],["形成数列",{"2":{"16":1}}],["细胞每轮一分为二",{"2":{"16":1}}],["细胞分裂",{"2":{"16":1}}],["base",{"2":{"16":3}}],["brr",{"2":{"2":1}}],["分裂n轮后有",{"2":{"16":1}}],["分裂两轮后变为4个",{"2":{"16":1}}],["分裂一轮后变为2个",{"2":{"16":1}}],["初始状态为1个细胞",{"2":{"16":1}}],["初始化值",{"2":{"2":1}}],["初始化值和不初始化值",{"2":{"2":1}}],["初始化数组有两种方式",{"2":{"2":1}}],["初始化数组时计算机会在内存中分配一块连续的空间",{"2":{"2":1}}],["初始化数组",{"0":{"2":1}}],["指数阶",{"2":{"16":2}}],["指定长度时",{"2":{"2":1}}],["外层循环和内层循环的时间复杂度都为o",{"2":{"16":1}}],["平方阶通常出现在嵌套循环中",{"2":{"16":1}}],["平方阶的操作数量相对于输入数据大小n以平方级别增长",{"2":{"16":1}}],["平方阶",{"2":{"16":1}}],["相关代码如下",{"2":{"16":1}}],["和o",{"2":{"16":1}}],["两层循环的时间复杂度分别为",{"2":{"16":1}}],["线性数据结构",{"2":{"19":1}}],["线性和非线性",{"0":{"19":1}}],["线性对数阶常出现于嵌套循环中",{"2":{"16":1}}],["线性对数阶",{"2":{"16":2}}],["线性阶o",{"2":{"16":1}}],["while",{"2":{"16":1}}],["count",{"2":{"16":17}}],["crr",{"2":{"2":1}}],["对数据结构的种类",{"2":{"21":1}}],["对数阶",{"2":{"16":1}}],["对数阶o",{"2":{"16":1}}],["对应的元素存放在数组中的对应位置",{"2":{"12":1}}],["与输入数据n无关",{"2":{"16":1}}],["但打印函数的执行时间固定",{"2":{"16":1}}],["虽然打印程序需要循环1000次",{"2":{"16":1}}],["打印函数的执行时间固定",{"2":{"16":1}}],["算法",{"2":{"19":1,"20":1}}],["算法属于线性阶",{"2":{"16":1}}],["算法属于对数阶",{"2":{"16":1}}],["算法属于常数阶",{"2":{"16":1}}],["算法函数的时间增长趋势",{"2":{"13":1}}],["常见的数据结构类型",{"0":{"18":1},"1":{"19":1,"20":1}}],["常见时间复杂度类型图",{"2":{"16":1}}],["常见时间复杂度类型",{"0":{"16":1}}],["常数阶o",{"2":{"16":1}}],["趋势",{"2":{"16":1}}],["gt",{"2":{"15":1}}],["gen",{"2":{"3":1}}],["get",{"2":{"3":1}}],["操作数",{"2":{"15":1}}],["最高阶对时间增长的趋势的影响是其他项所不能相比的",{"2":{"15":1}}],["应该深度的学习每一种数据结构类型",{"2":{"21":1}}],["应为当n趋于无穷大是",{"2":{"15":1}}],["应用",{"0":{"12":1}}],["判断渐进上界",{"0":{"15":1}}],["判断操作数函数的渐进上界",{"2":{"13":1}}],["💯",{"2":{"14":1}}],["j",{"2":{"14":1,"16":1}}],["技巧",{"2":{"14":4}}],["🥚",{"2":{"14":1}}],["点的技巧",{"2":{"14":1}}],["点和第",{"2":{"14":1}}],["每一层循环依然可以分别套用第",{"2":{"14":1}}],["总操作数量等于外层循环和内层循环操作数量之积",{"2":{"14":1}}],["循环实现",{"2":{"16":2}}],["循环嵌套时使用乘法",{"2":{"14":1}}],["循环2n次",{"2":{"14":1}}],["都可以简化记为n次",{"2":{"14":1}}],["省略所有系数",{"2":{"14":1}}],["因为它们都与n无关",{"2":{"14":1}}],["因此总体的时间复杂度为",{"2":{"16":1}}],["因此该算法的时间复杂度是常数阶",{"2":{"16":2}}],["因此该算法的的时间复杂度",{"2":{"15":1}}],["因此想获得算法的时间复杂度",{"2":{"14":1}}],["因此只能使用常量来指定长度",{"2":{"2":1}}],["忽略t",{"2":{"14":1}}],["获得操作数函数t",{"2":{"14":1}}],["渐进上界",{"2":{"14":1}}],["表示标识算法操作次数的函数的",{"2":{"14":1}}],["o",{"2":{"14":1,"15":8,"16":2}}],["option",{"2":{"7":1}}],["通过对数据结构在逻辑层面和物理层面上的不同理解",{"2":{"21":1}}],["通过索引访问",{"2":{"6":1}}],["通过索引index访问数组中的元素",{"2":{"3":1}}],["通常将线性时间复杂度记为",{"2":{"14":1}}],["时间增长趋势",{"0":{"14":1}}],["时间复杂度为2^n",{"2":{"16":1}}],["时间复杂度为o",{"2":{"11":1}}],["时间复杂度类型是根据输入数据n的大小与算法执行时间",{"2":{"16":1}}],["时间复杂度由t",{"2":{"15":1}}],["时间复杂度",{"0":{"13":1},"1":{"14":1,"15":1,"16":1},"2":{"15":1}}],["得出其操作数函数",{"2":{"13":1}}],["或者二者组合而实现",{"2":{"20":1}}],["或者直接遍历元素本身",{"2":{"6":1}}],["或推断",{"2":{"13":1}}],["根据推断规则得出",{"2":{"14":1}}],["根据",{"2":{"13":1}}],["根据索引实现随机抽样",{"2":{"12":1}}],["计算其操作数函数t",{"2":{"14":1}}],["计算操作数",{"2":{"14":1}}],["计算时间复杂度通常需要两个步骤",{"2":{"13":1}}],["计算机不仅会加载它",{"2":{"10":1}}],["图等",{"2":{"20":1}}],["图等数据结构",{"2":{"12":1}}],["图3",{"2":{"19":1,"20":1}}],["图选自",{"2":{"19":1,"20":1}}],["图",{"2":{"18":1,"19":2,"20":1}}],["图的邻接矩阵表示实际上是一个二维数组",{"2":{"12":1}}],["例如",{"2":{"12":1,"14":1}}],["堆",{"2":{"12":1,"18":1,"19":2,"20":2}}],["哈希表",{"2":{"12":1,"18":1,"19":3,"20":2}}],["队列",{"2":{"12":1,"18":1,"19":1,"20":2}}],["数据结构是在计算机中具有一定逻辑关系",{"2":{"17":1}}],["数据结构初识",{"0":{"17":1},"1":{"18":1,"19":1,"20":1,"21":1}}],["数据结构实现",{"2":{"12":1}}],["数组可以用于实现栈",{"2":{"12":1}}],["数组可通过索引在时间o",{"2":{"10":1}}],["数组是神经网络编程中最常使用的数据结构",{"2":{"12":1}}],["数组是排序和搜索算法最常用的数据结构",{"2":{"12":1}}],["数组是一种基础且常见的数据结构",{"2":{"12":1}}],["数组需要预先分配固定大小的内存空间",{"2":{"11":1}}],["数组也具备一下缺点",{"2":{"11":1}}],["数组为数据分配了连续的内存块",{"2":{"10":1}}],["数组在内存空间中是连续的一片空间",{"2":{"10":1}}],["数组的长度是固定的",{"2":{"11":1}}],["数组的插入和删除操作需要大量移动元素",{"2":{"11":1}}],["数组的优",{"0":{"9":1},"1":{"10":1,"11":1,"12":1}}],["数组的常见操作",{"0":{"1":1},"1":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1}}],["数组中元素通过索引",{"2":{"0":1}}],["数组将数据存储在计算机中一段连续的存储空间",{"2":{"0":1}}],["数组",{"0":{"0":1},"2":{"18":1,"19":1}}],["这些数据都是以数组的形式构建的",{"2":{"12":1}}],["这种做法包含丰富的先验信息",{"2":{"10":1}}],["矩阵",{"2":{"12":1,"20":1}}],["神经网络中大量使用了向量",{"2":{"12":1}}],["机器学习",{"2":{"12":1}}],["码值作为索引",{"2":{"12":1}}],["码的映射",{"2":{"12":1}}],["则可以将字符的",{"2":{"12":1}}],["则会造成很大的开销",{"2":{"11":1}}],["则会造成浪费",{"2":{"11":1}}],["假如我们想实现字符到",{"2":{"12":1}}],["可以使用数组作为查找表",{"2":{"12":1}}],["可能造成内存浪费",{"2":{"11":1}}],["查找表",{"2":{"12":1}}],["查找元素",{"0":{"7":1}}],["二分查找等都主要在数组上进行",{"2":{"12":1}}],["归并排序",{"2":{"12":1}}],["快速排序",{"2":{"12":1}}],["排序和搜索",{"2":{"12":1}}],["并生成一个随机序列",{"2":{"12":1}}],["并且存储类型相同",{"2":{"10":1}}],["并且按照一定的顺序排列",{"2":{"0":1}}],["那么可以用数组存储",{"2":{"12":1}}],["随机访问",{"2":{"12":1}}],["也可用于实现各种复杂数据结构",{"2":{"12":1}}],["也就意味着分配的内存空间大是固定的",{"2":{"8":1}}],["既频繁应用在各类算法之中",{"2":{"12":1}}],["如数组在内存中的空间一般是连续的",{"2":{"20":1}}],["如果我们想随机抽取一些样本",{"2":{"12":1}}],["如果分配的空间超过需要存储的数据",{"2":{"11":1}}],["如需要扩容",{"2":{"11":1}}],["无法动态调整",{"2":{"11":1}}],["无须额外的结构开销",{"2":{"10":1}}],["长度不可变",{"2":{"11":1}}],["效率较低",{"2":{"11":1}}],["插入和删除操作效率低",{"2":{"11":1}}],["插入元素",{"0":{"4":1}}],["缺点",{"0":{"11":1}}],["缺点和应用",{"0":{"9":1},"1":{"10":1,"11":1,"12":1}}],["还会缓存其周围的其他数据",{"2":{"10":1}}],["缓存局部性",{"2":{"10":1}}],["内访问任何元素",{"2":{"10":1}}],["支持随机访问",{"2":{"10":1}}],["空间效率高",{"2":{"10":1}}],["系统可以利用这些信息来优化数据结构的操作效率",{"2":{"10":1}}],["优点",{"0":{"10":1}}],["vec",{"2":{"8":1}}],["vector",{"2":{"2":2}}],["square",{"2":{"16":1}}],["size",{"2":{"8":2}}],["some",{"2":{"7":1}}],["然后把原数组中的元素复制到新空间中",{"2":{"8":1}}],["然后根据数组元素的类型和数量来确定数组的大小",{"2":{"2":1}}],["扩容数组需要重新分配一块更大的内存空间",{"2":{"8":1}}],["扩容数组",{"0":{"8":1}}],["7",{"0":{"8":1}}],["x3c",{"2":{"7":1,"16":1}}],["x26",{"2":{"2":2,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1}}],["t",{"2":{"14":1}}],["tip",{"2":{"14":1}}],["target",{"2":{"7":2}}],["thread",{"2":{"3":1}}],["的变化来决定的",{"2":{"16":1}}],["的查找算法",{"2":{"7":1}}],["的数组",{"2":{"20":1}}],["的数组访问函数",{"2":{"3":1}}],["的数组被设计为在编译期确定长度",{"2":{"2":1}}],["n−2",{"2":{"16":1}}],["n−1",{"2":{"16":1}}],["n互不重复的元素",{"2":{"16":1}}],["n2",{"2":{"15":1}}],["n^3",{"2":{"15":2}}],["n^2",{"2":{"15":2,"16":1}}],["new",{"2":{"8":3}}],["none",{"2":{"7":1}}],["n",{"2":{"7":1,"11":1,"14":12,"15":5,"16":31}}],["nums",{"2":{"4":5,"5":4}}],["num",{"2":{"4":4}}],["知道找到对应值",{"2":{"7":1}}],["需要注意的是",{"2":{"20":1}}],["需要先计算出算法的操作数函数t",{"2":{"14":1}}],["需要遍历数组",{"2":{"7":1}}],["需要把插入位置后面的元素全部向后移一位",{"2":{"4":1}}],["6",{"0":{"7":1}}],["直接访问",{"2":{"6":1}}],["println",{"2":{"6":2,"14":2,"16":2}}],["linear",{"2":{"16":4}}],["logarithmic",{"2":{"16":1}}],["log",{"2":{"16":5}}],["loop",{"2":{"6":1}}],["lt",{"2":{"15":1}}],["len",{"2":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":2}}],["let",{"2":{"2":4,"3":2,"8":1,"14":1,"16":7}}],["遍历数组可以使用索引index来获取元素本身",{"2":{"6":1}}],["遍历数组",{"0":{"6":1}}],["delete",{"2":{"5":1}}],["末端位置的元素将为none",{"2":{"5":1}}],["删除元素需要将删除位置后面的元素都往前移动一位",{"2":{"5":1}}],["删除元素",{"0":{"5":1}}],["处的元素",{"2":{"4":1}}],["处插入元素",{"2":{"4":1}}],["赋给",{"2":{"4":1}}],["将",{"2":{"4":1}}],["+=",{"2":{"16":6}}],["+1",{"2":{"15":1}}],["+n",{"2":{"14":2}}],["+0",{"2":{"14":2}}],["+",{"2":{"4":1,"5":1,"8":1,"14":3,"15":5,"16":6}}],["factorial",{"2":{"16":2}}],["find",{"2":{"7":1}}],["for",{"2":{"4":1,"5":1,"6":2,"7":1,"8":1,"14":3,"16":8}}],["fn",{"2":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"14":1,"16":8}}],["以及不同数据结构之间的关系有了一定的了解",{"2":{"21":1}}],["以及之后的所有元素向后移动一位",{"2":{"4":1}}],["以此类推",{"2":{"16":1}}],["以下面算法为例",{"2":{"14":1}}],["以下将",{"2":{"2":1}}],["把索引",{"2":{"4":1}}],["usize>",{"2":{"7":1}}],["usize",{"2":{"4":1,"5":1,"8":1}}],["mut",{"2":{"4":1,"5":1,"8":2,"14":1,"16":8}}],["当然这些都还是很浅显的认知",{"2":{"21":1}}],["当算法的运行时间跟输入数据n成正比时",{"2":{"16":1}}],["当算法的运行时间跟输入数据n的log成正比时",{"2":{"16":1}}],["当算法的运行时间跟输入数据n无关时",{"2":{"16":1}}],["当需要快速查找一个元素或其对应关系时",{"2":{"12":1}}],["当访问数组元素时",{"2":{"10":1}}],["当元素超出数组长度的时候",{"2":{"4":1}}],["当索引超出数组长度时会产生无效的访问",{"2":{"3":1}}],["return",{"2":{"16":3}}],["recur",{"2":{"16":5}}],["rev",{"2":{"4":1}}],["range",{"2":{"3":1}}],["rand",{"2":{"3":5}}],["rng",{"2":{"3":1}}],["rust",{"2":{"2":4,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"14":1,"16":7}}],[">",{"2":{"3":1,"7":1,"16":9}}],["exponential",{"2":{"16":1}}],["extend",{"2":{"2":1}}],["enlarge",{"2":{"8":3}}],["element",{"2":{"3":3,"5":1,"7":1}}],["下面实现一个时间复杂度为o",{"2":{"3":1,"7":1}}],["按照元素排列递增",{"2":{"3":1}}],["索引从0开始",{"2":{"3":1}}],["访问数组元素",{"0":{"3":1}}],["看作数组",{"2":{"2":1}}],["一些操作数对应的时间复杂度",{"2":{"15":1}}],["一般情况下用作动态数组的类型",{"2":{"2":1}}],["一旦创建",{"2":{"0":1}}],["是指数阶增长的典型例子",{"2":{"16":1}}],["是",{"2":{"2":1}}],["由于数组在创建时的长度固定",{"2":{"8":1}}],["由于",{"2":{"2":1}}],["为了方便实现扩容",{"2":{"2":1}}],["为切片",{"2":{"2":1}}],["为数组",{"2":{"2":1}}],["不指定长度时",{"2":{"2":1}}],["不初始化值",{"2":{"2":1}}],["中最高阶的项来决定",{"2":{"15":1}}],["中的常数项",{"2":{"14":1}}],["中",{"2":{"2":1}}],["在具备这些优点的同时",{"2":{"11":1}}],["在数组有效索引范围内查找元素",{"2":{"7":1}}],["在数组的索引",{"2":{"4":1}}],["在数组中插入元素",{"2":{"4":1}}],["在",{"2":{"2":1}}],["0",{"2":{"2":7,"3":1,"6":1,"7":1,"8":2,"14":5,"16":15}}],["4",{"0":{"5":1},"2":{"2":2,"16":2}}],["3n+2",{"2":{"15":1}}],["3n+1次等",{"2":{"14":1}}],["3",{"0":{"4":1,"16":1},"2":{"2":2,"14":1}}],["2^",{"2":{"16":2}}],["2^n个细胞",{"2":{"16":1}}],["2^n",{"2":{"15":2,"16":1}}],["2n^2",{"2":{"15":1}}],["2n",{"2":{"15":2}}],["2",{"0":{"3":1,"15":1},"2":{"2":2,"13":1,"14":3,"16":6,"20":1}}],["=n∗",{"2":{"16":1}}],["=n2+n",{"2":{"14":1}}],["==",{"2":{"7":1,"15":1,"16":1}}],["=",{"2":{"2":3,"3":2,"4":2,"5":1,"8":2,"14":2,"16":12}}],["5",{"0":{"6":1},"2":{"2":8,"14":1}}],["if",{"2":{"7":1,"16":2}}],["i",{"2":{"4":3,"5":3,"6":4,"7":3,"8":3,"14":2,"16":4}}],["info",{"2":{"15":1}}],["in",{"2":{"4":1,"5":1,"6":2,"7":1,"8":1,"14":3,"16":8}}],["insert",{"2":{"4":1}}],["index",{"2":{"0":1,"3":2,"4":6,"5":2}}],["i32",{"2":{"2":6,"3":2,"4":2,"5":1,"6":1,"7":2,"8":1,"14":1,"16":17}}],["as",{"2":{"16":1}}],["ascii",{"2":{"12":2}}],["alog",{"2":{"16":2}}],["algorithm",{"2":{"14":1}}],["array",{"2":{"2":1}}],["arr",{"2":{"2":1,"3":3,"6":4,"7":3,"8":7}}],["a",{"2":{"2":1,"14":3}}],["1000",{"2":{"16":1}}],["10000n^2",{"2":{"15":1}}],["1000000",{"2":{"15":1}}],["10",{"2":{"15":1}}],["1",{"0":{"2":1,"14":1},"2":{"2":2,"3":1,"4":2,"5":2,"10":1,"13":1,"14":6,"15":1,"16":18,"19":1}}],["标识其在数组中的位置",{"2":{"0":1}}],["其长度就固定了",{"2":{"0":1}}]],"serializationVersion":2}';export{t as default};
