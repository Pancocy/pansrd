import{_ as s,D as n,c as r,I as l,w as o,a4 as c,j as a,a as t,o as i}from"./chunks/framework.ByxKXAtA.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"datastru/ds-datastructure.md","filePath":"datastru/ds-datastructure.md"}'),d={name:"datastru/ds-datastructure.md"},u=c('<h2 id="数据结构" tabindex="-1">数据结构 <a class="header-anchor" href="#数据结构" aria-label="Permalink to &quot;数据结构&quot;">​</a></h2><blockquote><p>定义： 数据结构是在计算机中具有一定逻辑关系、存储结构并且封装相应操作方法的数据集合。</p></blockquote><h3 id="常见的数据结构类型" tabindex="-1">常见的数据结构类型 <a class="header-anchor" href="#常见的数据结构类型" aria-label="Permalink to &quot;常见的数据结构类型&quot;">​</a></h3><p>🌵常见的数据类型有：数组、链表、栈、堆、图、树、哈希表、队列。​理解数据机构可以从两个层面理解:逻辑结构和物理结构。</p><h4 id="逻辑结构-线性和非线性" tabindex="-1">逻辑结构：线性和非线性 <a class="header-anchor" href="#逻辑结构-线性和非线性" aria-label="Permalink to &quot;逻辑结构：线性和非线性&quot;">​</a></h4><blockquote><p>逻辑结构主要是描述数据之间的逻辑关系,具有线性关系还是非线性关系。</p></blockquote><ul><li>线性数据结构：数组、链表、队列、栈、哈希表</li><li>非线性数据结构：树、图、堆、哈希表</li></ul><p>非线性数据结构又可以分为:网状结构和非网状结构。</p><ul><li>网状结构：图</li><li>非网状结构：树、哈希表、堆</li></ul><p><img src="https://xxzxka-1316694700.cos.ap-nanjing.myqcloud.com/psrd%2Fclassification_logic_structure.png" alt="线性数据结构与非线性数据结构" loading="lazy"></p>',10),_=a("h4",{id:"物理结构-连续和非连续",tabindex:"-1"},[t("物理结构：连续和非连续 "),a("a",{class:"header-anchor",href:"#物理结构-连续和非连续","aria-label":'Permalink to "物理结构：连续和非连续"'},"​")],-1),h=a("blockquote",null,[a("p",null,"物理结构是指数据在内存中的存储方式是连续的还是非连续的.如数组在内存中的空间一般是连续的，而链表则是分散的,存储链表的指针和数据通常是分开的。")],-1),p=a("p",null,[a("img",{src:"https://xxzxka-1316694700.cos.ap-nanjing.myqcloud.com/psrd%2Fclassification_phisical_structure.png",alt:"物理结构",loading:"lazy"})],-1),m=a("p",null,"需要注意的是，所有的数据结构都可以基于数组或者链表，或者二者组合而实现。",-1),f=a("ul",null,[a("li",null,"基于数组可实现：栈、队列、哈希表、树、堆、图、矩阵、张量（维度 的数组）等。"),a("li",null,"基于链表可实现：栈、队列、哈希表、树、堆、图等。")],-1),x=a("h3",{id:"小结",tabindex:"-1"},[t("小结 "),a("a",{class:"header-anchor",href:"#小结","aria-label":'Permalink to "小结"'},"​")],-1),b=a("p",null,"通过对数据结构在逻辑层面和物理层面上的不同理解，对数据结构的种类，以及不同数据结构之间的关系有了一定的了解。当然这些都还是很浅显的认知，要想真正地理解数据，应该深度的学习每一种数据结构类型。",-1);function k(q,g,P,T,N,V){const e=n("center");return i(),r("div",null,[u,l(e,null,{default:o(()=>[t("图选自[Hello,算法 图3-1]")]),_:1}),_,h,p,l(e,null,{default:o(()=>[t("图选自[Hello,算法 图3-2]")]),_:1}),m,f,x,b])}const z=s(d,[["render",k]]);export{y as __pageData,z as default};
