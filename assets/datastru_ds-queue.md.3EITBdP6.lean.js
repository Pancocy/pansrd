import{_ as l,E as p,c as t,o as e,j as s,I as n,a4 as k,w as h,a as i}from"./chunks/framework.Bzt5SQa6.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"datastru/ds-queue.md","filePath":"datastru/ds-queue.md"}'),E={name:"datastru/ds-queue.md"},r=s("h3",{id:"实现简单结构的队列",tabindex:"-1"},[i("实现简单结构的队列 "),s("a",{class:"header-anchor",href:"#实现简单结构的队列","aria-label":'Permalink to "实现简单结构的队列"'},"​")],-1),d=s("p",null,"队列与栈的差异在于栈遵循“先进后出”原则,即只有单向出口,而队列更像生活中的排队结账,队首完成结账后离开队列，同时队尾又可以不断加入需要结账的人。二者都可以通过链表和数组来实现。",-1),g=s("p",null,[s("img",{src:"https://www.hello-algo.com/chapter_stack_and_queue/queue.assets/queue_operations.png",alt:"队列示意图",loading:"lazy"})],-1),y=s("h3",{id:"_1-链表实现队列",tabindex:"-1"},[i("1. 链表实现队列 "),s("a",{class:"header-anchor",href:"#_1-链表实现队列","aria-label":'Permalink to "1. 链表实现队列"'},"​")],-1),F=s("p",null,"将链表的尾节点看作队尾，可以不断加入新的节点,将链表的头节点看作队首，出队的时候，删除头节点，并将头节点的下一节点作为新的头节点。",-1),c=k("",5),A=k("",3);function D(C,B,o,u,_,f){const a=p("center");return e(),t("div",null,[r,d,n(a,null,{default:h(()=>[i("队列示意图(来自《Hello算法》图5-4)")]),_:1}),g,y,F,n(a,null,{default:h(()=>[i("基于链表实现队列的入队出队操作(来自《Hello算法》)")]),_:1}),c,n(a,null,{default:h(()=>[i("基于数组实现队列的入队出队操作(来自《Hello算法》)")]),_:1}),A])}const q=l(E,[["render",D]]);export{b as __pageData,q as default};
